BEGIN (implicit)
PRAGMA main.table_info("current_positions")
[raw sql] ()
PRAGMA main.table_info("target_positions")
[raw sql] ()
PRAGMA main.table_info("open_orders")
[raw sql] ()
PRAGMA main.table_info("transactions")
[raw sql] ()
PRAGMA main.table_info("historical_data")
[raw sql] ()
COMMIT
BEGIN (implicit)
SELECT name FROM sqlite_master WHERE type='table' AND name NOT LIKE 'sqlite~_%' ESCAPE '~' ORDER BY name
[raw sql] ()
ROLLBACK
BEGIN (implicit)
PRAGMA main.table_xinfo("current_positions")
[raw sql] ()
ROLLBACK
BEGIN (implicit)
PRAGMA main.table_xinfo("target_positions")
[raw sql] ()
ROLLBACK
BEGIN (implicit)
PRAGMA main.table_xinfo("open_orders")
[raw sql] ()
ROLLBACK
BEGIN (implicit)
PRAGMA main.table_xinfo("transactions")
[raw sql] ()
ROLLBACK
BEGIN (implicit)
PRAGMA main.table_xinfo("historical_data")
[raw sql] ()
ROLLBACK
BEGIN (implicit)
SELECT current_positions.stock AS current_positions_stock, current_positions.avg_price_bought AS current_positions_avg_price_bought, current_positions.quantity AS current_positions_quantity, current_positions.stop_limit AS current_positions_stop_limit, current_positions.stop_limit_in_place AS current_positions_stop_limit_in_place, current_positions.strategy AS current_positions_strategy 
FROM current_positions
[generated in 0.00016s] ()
COMMIT
BEGIN (implicit)
SELECT historical_data.stock AS historical_data_stock, historical_data.time AS historical_data_time, historical_data.open AS historical_data_open, historical_data.high AS historical_data_high, historical_data.low AS historical_data_low, historical_data.close AS historical_data_close, historical_data.volume AS historical_data_volume 
FROM historical_data 
WHERE historical_data.stock = ? ORDER BY historical_data.time DESC
 LIMIT ? OFFSET ?
[generated in 0.00008s] ('SPY', 50, 0)
